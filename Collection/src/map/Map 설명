Map 인터페이스

<키, 값>의 쌍으로 한 개의 데이터를 구성하는 자료 구조이다. 
키는 유일해야 하고, 값은 중복이 있을 수 있다.
아이디-암호, 번호-이름 과 같은 경우에 사용할 수 있다.

HashMap
hash 함수를 이용한다. hash함수는 키 값을 입력하면 hash 값을 출력해 주는 함수로, 속도가 빠르다는 장점이 있다.

* HashMap 메소드

void clear() : HashMap의 모든 데이터를 삭제함
boolean contains(Object key) : Key에 해당하는 키가 존재하는지 판단함.
boolean contains(Object value) : value에 해당하는 값이 존재하는지 판단함.
Set<Map.Entry<K,V>> entrySet() : 모든 entry를 반환함.
V get(Object key) : key에 해당하는 값을 반환한다.
Set<K> keySet() : key들의 집합을 반환한다.
V put(K key, V value) : <key, value> 쌍을 HashMap에 추가한다.
V remove(Object key) : key에 해당하는 데이터를 삭제한다.
int size() : HashMap의 크기를 반환한다.


TreeMap
<키, 값>의 쌍으로 데이터가 구성되고 키를 기준으로 정렬이 이루어지기 때문에 키에 해당하는 클래스를 Comparable 또는 Comparator 인터페이스로 구현해야 한다.

*TreeMap 메소드 ( 메소드 하나 빼고 hashMap 메소드들과 똑같음)

Collection<V> values() : value들의 집합을 반환.

