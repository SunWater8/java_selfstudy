List 인터페이스는 객체가 저장되는 순서가 있고 중복된 데이터를 가질 수 있도록 허용한다.
 List 인터페이스를 구현한 주요 하위 클래스로는 ArrayList, Vector, LinkedList 등이 있다. 
 
 ArrayList는 배열과 같은 구조를 갖고 있지만 훨씬 융통성 있게 활용할 수 있다.
 배열은 생성할 때 배열의 크기를 분명히 주어야 한다. 그리고 프로그램이 끝날 때까지 그 크기를 유지해야 한다. 이것이 배열의 단점이다.
 int[] a = new int[5]; 와 같이 크기 5인 정수 배열을 만들었다면 데이터를 5개까지만 저장할 수 있다.
 만약에 더 많은 데이터를 저장하려면 배열 a는 사용할 수 없고 다시 새롭게 new 키워드를 이용해서 배열을 생성해야 한다. 
 ArrayList는 이러한 배열의 단점을 보완할 수 있는 구조이다. (ArrayList는 add 메소드를 이용해서 얼마든지 원하는 만큼 데이터를 저장할 수 있다.)
 그리고 ArrayList에는 객체만 넣을 수 있다.
 
 LinkedList는 배열이나 ArrayList와 약간 다르다. 
데이터의 순서가 있고 중복된 데이터를 저장해야 한다는 점은 같지만 내부 구성이 약간 다르다. 